---
import Layout from '../layouts/Layout.astro';
import { SCENARIOS } from '../types/index.js';

// Group scenarios by number to show completion across campaigns
const scenarioGroups = SCENARIOS.map(scenario => {
  const campaignScenarios: any[] = [];
  return {
    ...scenario,
    campaigns: campaignScenarios,
    totalCompleted: campaignScenarios.filter((s: any) => s.completed).length,
    totalAttempts: campaignScenarios.length
  };
});
---

<Layout title="Scenarios - Gloomhaven Tracker">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-white">Scenarios</h1>
      <p class="text-gray-400 mt-2">Track scenario completion across all campaigns</p>
    </div>

    <!-- Overall Progress -->
    <div class="bg-gray-800 rounded-lg p-6 border border-gray-700 mb-8">
      <h2 class="text-xl font-semibold text-white mb-4">Overall Progress</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div class="text-center">
          <div class="text-3xl font-bold text-white">
            0
          </div>
          <div class="text-sm text-gray-400">Completed Scenarios</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-white">
            0
          </div>
          <div class="text-sm text-gray-400">Total Attempts</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-white">
            0%
          </div>
          <div class="text-sm text-gray-400">Success Rate</div>
        </div>
      </div>
    </div>

    <!-- Scenarios List -->
    <div class="space-y-4">
      {scenarioGroups.map((scenario) => (
        <div class="bg-gray-800 rounded-lg border border-gray-700">
          <!-- Scenario Header -->
          <div class="p-6 border-b border-gray-700">
            <div class="flex justify-between items-start">
              <div>
                <h3 class="text-xl font-semibold text-white">
                  Scenario #{scenario.number}: {scenario.name}
                </h3>
                <p class="text-gray-400 mt-1">{scenario.description}</p>
                {scenario.requirements.length > 0 && (
                  <div class="mt-2">
                    <span class="text-sm text-gray-500">Requirements: </span>
                    <span class="text-sm text-gray-400">{scenario.requirements.join(', ')}</span>
                  </div>
                )}
              </div>
              <div class="text-right">
                <div class="text-sm text-gray-400">
                  {scenario.totalCompleted}/{scenario.totalAttempts} campaigns
                </div>
                <div class="text-xs text-gray-500">
                  {Math.round((scenario.totalCompleted / scenario.totalAttempts) * 100) || 0}% success rate
                </div>
              </div>
            </div>
          </div>

          <!-- Campaign Progress -->
          <div class="p-6">
            {scenario.campaigns.length === 0 ? (
              <p class="text-gray-400 text-center py-4">No campaigns have attempted this scenario yet</p>
            ) : (
              <div class="space-y-3">
                {scenario.campaigns.map((campaignScenario) => (
                  <div class={`flex justify-between items-center p-3 rounded-lg border ${
                    campaignScenario.completed
                      ? 'bg-green-900/20 border-green-700'
                      : 'bg-gray-700 border-gray-600'
                  }`}>
                    <div class="flex items-center space-x-3">
                      <span class={`w-2 h-2 rounded-full ${
                        campaignScenario.completed ? 'bg-green-400' : 'bg-gray-500'
                      }`}></span>
                      <span class="text-white font-medium">{campaignScenario.campaignName}</span>
                      {campaignScenario.completed && campaignScenario.completedAt && (
                        <span class="text-xs text-gray-400">
                          Completed {new Date(campaignScenario.completedAt).toLocaleDateString()}
                        </span>
                      )}
                    </div>
                    <div class="flex items-center space-x-2">
                      {campaignScenario.completed ? (
                        <span class="text-green-400 text-sm">âœ“ Completed</span>
                      ) : (
                        <button class="bg-purple-600 hover:bg-purple-700 text-white text-sm py-1 px-3 rounded transition-colors">
                          Mark Complete
                        </button>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</Layout>
