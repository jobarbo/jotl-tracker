---
import Layout from "../../layouts/Layout.astro";
import {CHARACTER_CLASSES} from "../../types/index";
---

<Layout title='Create Character - Gloomhaven Tracker'>
	<div class='max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8'>
		<!-- Header -->
		<div class='mb-8'>
			<h1 class='text-3xl font-bold text-white'>Create New Character</h1>
			<p class='text-gray-400 mt-2'>Create a new character for your Gloomhaven: Jaws of the Lion adventures</p>
		</div>

		<!-- Create Form -->
		<form id='create-character-form' class='space-y-8'>
			<!-- Character Basic Info -->
			<div class='bg-gray-800 rounded-lg p-6 border border-gray-700'>
				<h2 class='text-xl font-semibold text-white mb-4'>Character Information</h2>

				<div class='grid grid-cols-1 md:grid-cols-2 gap-6'>
					<div>
						<label for='character-name' class='block text-sm font-medium text-gray-300 mb-2'> Character Name * </label>
						<input
							type='text'
							id='character-name'
							name='name'
							required
							class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'
							placeholder='e.g., Thorne'
						/>
					</div>

					<div>
						<label for='character-class' class='block text-sm font-medium text-gray-300 mb-2'> Class * </label>
						<select
							id='character-class'
							name='class'
							required
							class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'>
							<option value=''>Select a class</option>
							<option value='hatchet'>🎯 Hatchet</option>
							<option value='red-guard'>🛡️ Red Guard</option>
							<option value='voidwarden'>🔮 Voidwarden</option>
							<option value='demolitionist'>💥 Demolitionist</option>
						</select>
					</div>
				</div>
			</div>

			<!-- Character Stats -->
			<div class='bg-gray-800 rounded-lg p-6 border border-gray-700'>
				<h2 class='text-xl font-semibold text-white mb-4'>Starting Stats</h2>

				<div class='grid grid-cols-2 md:grid-cols-4 gap-6'>
					<div>
						<label for='level' class='block text-sm font-medium text-gray-300 mb-2'>🎯 Level</label>
						<input
							type='number'
							id='level'
							name='level'
							min='1'
							max='9'
							value='1'
							class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'
						/>
					</div>

					<div>
						<label for='experience' class='block text-sm font-medium text-gray-300 mb-2'>⭐ Experience</label>
						<input
							type='number'
							id='experience'
							name='experience'
							min='0'
							value='0'
							class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'
						/>
					</div>

					<div>
						<label for='gold' class='block text-sm font-medium text-gray-300 mb-2'>💰 Starting Gold</label>
						<input
							type='number'
							id='gold'
							name='gold'
							min='0'
							value='30'
							class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'
						/>
					</div>

					<div>
						<label for='checkmarks' class='block text-sm font-medium text-gray-300 mb-2'>✅ Checkmarks</label>
						<input
							type='number'
							id='checkmarks'
							name='checkmarks'
							min='0'
							value='0'
							class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'
						/>
					</div>
				</div>
			</div>

			<!-- Character Notes -->
			<div class='bg-gray-800 rounded-lg p-6 border border-gray-700'>
				<h2 class='text-xl font-semibold text-white mb-4'>Character Notes</h2>

				<div>
					<label for='notes' class='block text-sm font-medium text-gray-300 mb-2'>📝 Personal Notes</label>
					<textarea
						id='notes'
						name='notes'
						rows='4'
						class='w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent'
						placeholder='Character backstory, personality, goals, or other notes...'></textarea>
				</div>
			</div>

			<!-- Actions -->
			<div class='flex justify-between space-x-4'>
				<a href='/characters' class='bg-gray-600 hover:bg-gray-500 text-white font-medium py-2 px-6 rounded-lg transition-colors'> ← Back to Characters </a>
				<button type='submit' class='bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold py-2 px-6 rounded-lg transition-all duration-200'>
					Create Character
				</button>
			</div>
		</form>
	</div>

	<script define:vars={{CHARACTER_CLASSES}}>
		// Handle form submission
		document.getElementById("create-character-form").addEventListener("submit", async (e) => {
			e.preventDefault();

			const formData = new FormData(e.target);
			const characterData = {
				name: formData.get("name"),
				class: CHARACTER_CLASSES.find((cls) => cls.id === formData.get("class")),
				level: parseInt(formData.get("level")),
				experience: parseInt(formData.get("experience")),
				gold: parseInt(formData.get("gold")),
				checkmarks: parseInt(formData.get("checkmarks")),
				notes: formData.get("notes"),
			};

			try {
				const response = await fetch("/api/characters", {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify(characterData),
				});

				if (response.ok) {
					const newCharacter = await response.json();
					alert(`Character "${newCharacter.name}" created successfully!`);
					window.location.href = "/characters";
				} else {
					const error = await response.json();
					alert(`Failed to create character: ${error.error}`);
				}
			} catch (error) {
				console.error("Error creating character:", error);
				alert("Failed to create character. Please try again.");
			}
		});
	</script>
</Layout>
